# .github/release-drafter-config.yml

# Template for the release name (e.g., "v1.2.3")
name-template: 'v$RESOLVED_VERSION'
# Template for the tag name (e.g., "v1.2.3")
tag-template: 'v$RESOLVED_VERSION'

# Define categories for organizing changes in the release notes
categories:
  - title: '⚠️ Breaking Changes' # Use a distinct title for breaking changes
    label: 'breaking' # Assign PRs with the 'breaking' label here
  - title: '🚀 New Features'
    label: 'feature' # Assign PRs with the 'feature' label here
  - title: '🐛 Bug Fixes'
    label: 'fix'     # Assign PRs with the 'fix' label here
  - title: '🧹 Maintenance & Chores'
    labels:          # Assign PRs with 'maintenance' or 'chore' labels here
      - 'maintenance'
      - 'chore'
  - title: '📚 Documentation'
    label: 'docs'    # Assign PRs with the 'docs' label here
  - title: '⬆️ Dependency Updates'
    label: 'dependencies' # Assign PRs with the 'dependencies' label here
    collapse-after: 5 # Collapse this section if there are more than 5 dependency updates

# Template for individual change lines in the release notes
# $TITLE: PR Title
# $NUMBER: PR Number
# $AUTHOR: PR Author username
change-template: '- $TITLE @$AUTHOR (#$NUMBER)'
# Template for the overall release notes body
template: |
  ## What's Changed

  $CHANGES

  **Full Changelog**: https://github.com/$OWNER/$REPOSITORY/compare/$PREVIOUS_TAG...v$RESOLVED_VERSION

# Configure how the next version is calculated
version-resolver:
  major:
    labels:
      # PRs with these labels trigger a major bump (e.g., 1.x.x -> 2.0.0)
      - 'breaking'
      - 'major' # Explicit major label if needed
  minor:
    labels:
      # PRs with these labels trigger a minor bump (e.g., 1.1.x -> 1.2.0)
      - 'feature'
      - 'minor' # Explicit minor label if needed
  patch:
    labels:
      # PRs with these labels trigger a patch bump (e.g., 1.1.1 -> 1.1.2)
      - 'fix'
      - 'bug' # Alias for fix
      - 'maintenance'
      - 'chore' # Alias for maintenance
      - 'docs'
      - 'dependencies'
      - 'security'
      - 'refactor'
      - 'perf'
      - 'test'
  default: patch # If no labels match, default to a patch bump

# Automatically add labels to PRs based on branch names or files modified
autolabeler:
  - label: 'fix' # Apply 'fix' label
    branch:
      # Match branches starting with fix/, bugfix/, or hotfix/
      - '/^(fix|bugfix|hotfix)\/.+/'
  - label: 'feature' # Apply 'feature' label
    branch:
      # Match branches starting with feature/
      - '/^feature\/.+/'
  - label: 'docs' # Apply 'docs' label
    branch:
      # Match branches starting with docs/
      - '/^docs?\/.+/' # Allow 'doc/' or 'docs/'
  - label: 'dependencies' # Apply 'dependencies' label
    files:
      # If these files are changed
      - 'go.mod'
      - 'go.sum'
      # Add other dependency files if needed (e.g., package.json, requirements.txt)

# Labels that exclude a PR from the release notes
exclude-labels:
  - 'skip-changelog'