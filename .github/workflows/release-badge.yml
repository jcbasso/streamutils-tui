name: Release Badge

on:
  push:
    tags:
      - 'v*'

jobs:
  update-badge:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Latest Tag
        id: latest-tag
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Latest Tag: $TAG"

      - name: Create Release Badge
        run: |
          RELEASE_VERSION="${{ steps.latest-tag.outputs.tag }}"
          TEMPLATE=$(cat docs/assets/badge/release-badge-template.svg)
          SVG=$(echo "$TEMPLATE" | sed "s/{{RELEASE_VERSION}}/$RELEASE_VERSION/g")
          echo "$SVG" > docs/assets/badge/release-badge.svg

      - name: Check for Badge Changes
        id: check-changes
        run: |
          FILE="docs/assets/badge/release-badge.svg"

          if git ls-files --error-unmatch "$FILE" > /dev/null 2>&1; then
            if git diff --exit-code --quiet -- "$FILE"; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            if git diff --exit-code --quiet /dev/null "$FILE"; then
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          fi
          echo "check-changes output: ${{ steps.check-changes.outputs.changed }}"

      - name: Commit Badge
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Bot: Update release badge to ${{ steps.latest-tag.outputs.tag }}"
          file_pattern: "docs/assets/badge/release-badge.svg"
          branch: main